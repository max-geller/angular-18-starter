create table "public"."permissions" (
    "id" bigint generated by default as identity not null,
    "name" text,
    "description" text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone,
    "created_by" text,
    "updated_by" text
);


create table "public"."role_permissions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "role_id" bigint,
    "permission_id" bigint
);


create table "public"."roles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "description" text,
    "is_active" boolean default true,
    "updated_at" timestamp with time zone,
    "created_by" text,
    "updated_by" text
);


create table "public"."team_permissions" (
    "id" bigint generated by default as identity not null,
    "team_id" bigint,
    "permission_id" bigint,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone,
    "created_by" text,
    "updated_by" text
);


create table "public"."teams" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "description" text,
    "is_active" boolean,
    "updated_at" timestamp with time zone,
    "created_by" text,
    "updated_by" text
);


create table "public"."tenants" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "logo_url" text,
    "is_active" boolean,
    "updated_at" timestamp with time zone,
    "created_by" text,
    "updated_by" text
);


create table "public"."user_activity" (
    "id" uuid not null default gen_random_uuid(),
    "user_id" uuid,
    "tenant_id" bigint,
    "role_id" bigint,
    "action_type" text,
    "record_id" uuid default gen_random_uuid(),
    "details" jsonb,
    "created_at" timestamp with time zone not null default now()
);


create table "public"."user_teams" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid,
    "team_id" bigint
);


create table "public"."users" (
    "id" uuid not null,
    "updated_at" timestamp with time zone,
    "username" text,
    "avatar_url" text,
    "created_at" timestamp with time zone,
    "first_name" text,
    "last_name" text,
    "last_login" timestamp with time zone,
    "tenant_id" bigint,
    "email" text,
    "is_registered" boolean default false,
    "is_active" boolean default false,
    "invited_by" text,
    "role_id" bigint
);


CREATE UNIQUE INDEX permissions_pkey ON public.permissions USING btree (id);

CREATE UNIQUE INDEX role_permissions_pkey ON public.role_permissions USING btree (id);

CREATE UNIQUE INDEX roles_pkey ON public.roles USING btree (id);

CREATE UNIQUE INDEX team_permissions_pkey ON public.team_permissions USING btree (id);

CREATE UNIQUE INDEX teams_pkey ON public.teams USING btree (id);

CREATE UNIQUE INDEX tenants_pkey ON public.tenants USING btree (id);

CREATE UNIQUE INDEX user_activity_pkey ON public.user_activity USING btree (id);

CREATE UNIQUE INDEX user_teams_pkey ON public.user_teams USING btree (id);

CREATE UNIQUE INDEX users_email_key ON public.users USING btree (email);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

CREATE UNIQUE INDEX users_username_key ON public.users USING btree (username);

alter table "public"."permissions" add constraint "permissions_pkey" PRIMARY KEY using index "permissions_pkey";

alter table "public"."role_permissions" add constraint "role_permissions_pkey" PRIMARY KEY using index "role_permissions_pkey";

alter table "public"."roles" add constraint "roles_pkey" PRIMARY KEY using index "roles_pkey";

alter table "public"."team_permissions" add constraint "team_permissions_pkey" PRIMARY KEY using index "team_permissions_pkey";

alter table "public"."teams" add constraint "teams_pkey" PRIMARY KEY using index "teams_pkey";

alter table "public"."tenants" add constraint "tenants_pkey" PRIMARY KEY using index "tenants_pkey";

alter table "public"."user_activity" add constraint "user_activity_pkey" PRIMARY KEY using index "user_activity_pkey";

alter table "public"."user_teams" add constraint "user_teams_pkey" PRIMARY KEY using index "user_teams_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."role_permissions" add constraint "role_permissions_permission_id_fkey" FOREIGN KEY (permission_id) REFERENCES permissions(id) not valid;

alter table "public"."role_permissions" validate constraint "role_permissions_permission_id_fkey";

alter table "public"."role_permissions" add constraint "role_permissions_role_id_fkey" FOREIGN KEY (role_id) REFERENCES roles(id) not valid;

alter table "public"."role_permissions" validate constraint "role_permissions_role_id_fkey";

alter table "public"."team_permissions" add constraint "team_permissions_permission_id_fkey" FOREIGN KEY (permission_id) REFERENCES permissions(id) not valid;

alter table "public"."team_permissions" validate constraint "team_permissions_permission_id_fkey";

alter table "public"."team_permissions" add constraint "team_permissions_team_id_fkey" FOREIGN KEY (team_id) REFERENCES teams(id) not valid;

alter table "public"."team_permissions" validate constraint "team_permissions_team_id_fkey";

alter table "public"."user_activity" add constraint "user_activity_role_id_fkey" FOREIGN KEY (role_id) REFERENCES roles(id) not valid;

alter table "public"."user_activity" validate constraint "user_activity_role_id_fkey";

alter table "public"."user_activity" add constraint "user_activity_tenant_id_fkey" FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."user_activity" validate constraint "user_activity_tenant_id_fkey";

alter table "public"."user_activity" add constraint "user_activity_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."user_activity" validate constraint "user_activity_user_id_fkey";

alter table "public"."user_teams" add constraint "user_teams_team_id_fkey" FOREIGN KEY (team_id) REFERENCES teams(id) not valid;

alter table "public"."user_teams" validate constraint "user_teams_team_id_fkey";

alter table "public"."user_teams" add constraint "user_teams_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) not valid;

alter table "public"."user_teams" validate constraint "user_teams_user_id_fkey";

alter table "public"."users" add constraint "username_length" CHECK ((char_length(username) >= 3)) not valid;

alter table "public"."users" validate constraint "username_length";

alter table "public"."users" add constraint "users_email_key" UNIQUE using index "users_email_key";

alter table "public"."users" add constraint "users_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."users" validate constraint "users_id_fkey";

alter table "public"."users" add constraint "users_role_id_fkey" FOREIGN KEY (role_id) REFERENCES roles(id) not valid;

alter table "public"."users" validate constraint "users_role_id_fkey";

alter table "public"."users" add constraint "users_tenant_id_fkey" FOREIGN KEY (tenant_id) REFERENCES tenants(id) not valid;

alter table "public"."users" validate constraint "users_tenant_id_fkey";

alter table "public"."users" add constraint "users_username_key" UNIQUE using index "users_username_key";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
 SET search_path TO ''
AS $function$begin
  insert into public.users (id)
  values (new.id);
  return new;
end;$function$
;

grant delete on table "public"."permissions" to "anon";

grant insert on table "public"."permissions" to "anon";

grant references on table "public"."permissions" to "anon";

grant select on table "public"."permissions" to "anon";

grant trigger on table "public"."permissions" to "anon";

grant truncate on table "public"."permissions" to "anon";

grant update on table "public"."permissions" to "anon";

grant delete on table "public"."permissions" to "authenticated";

grant insert on table "public"."permissions" to "authenticated";

grant references on table "public"."permissions" to "authenticated";

grant select on table "public"."permissions" to "authenticated";

grant trigger on table "public"."permissions" to "authenticated";

grant truncate on table "public"."permissions" to "authenticated";

grant update on table "public"."permissions" to "authenticated";

grant delete on table "public"."permissions" to "service_role";

grant insert on table "public"."permissions" to "service_role";

grant references on table "public"."permissions" to "service_role";

grant select on table "public"."permissions" to "service_role";

grant trigger on table "public"."permissions" to "service_role";

grant truncate on table "public"."permissions" to "service_role";

grant update on table "public"."permissions" to "service_role";

grant delete on table "public"."role_permissions" to "anon";

grant insert on table "public"."role_permissions" to "anon";

grant references on table "public"."role_permissions" to "anon";

grant select on table "public"."role_permissions" to "anon";

grant trigger on table "public"."role_permissions" to "anon";

grant truncate on table "public"."role_permissions" to "anon";

grant update on table "public"."role_permissions" to "anon";

grant delete on table "public"."role_permissions" to "authenticated";

grant insert on table "public"."role_permissions" to "authenticated";

grant references on table "public"."role_permissions" to "authenticated";

grant select on table "public"."role_permissions" to "authenticated";

grant trigger on table "public"."role_permissions" to "authenticated";

grant truncate on table "public"."role_permissions" to "authenticated";

grant update on table "public"."role_permissions" to "authenticated";

grant delete on table "public"."role_permissions" to "service_role";

grant insert on table "public"."role_permissions" to "service_role";

grant references on table "public"."role_permissions" to "service_role";

grant select on table "public"."role_permissions" to "service_role";

grant trigger on table "public"."role_permissions" to "service_role";

grant truncate on table "public"."role_permissions" to "service_role";

grant update on table "public"."role_permissions" to "service_role";

grant delete on table "public"."roles" to "anon";

grant insert on table "public"."roles" to "anon";

grant references on table "public"."roles" to "anon";

grant select on table "public"."roles" to "anon";

grant trigger on table "public"."roles" to "anon";

grant truncate on table "public"."roles" to "anon";

grant update on table "public"."roles" to "anon";

grant delete on table "public"."roles" to "authenticated";

grant insert on table "public"."roles" to "authenticated";

grant references on table "public"."roles" to "authenticated";

grant select on table "public"."roles" to "authenticated";

grant trigger on table "public"."roles" to "authenticated";

grant truncate on table "public"."roles" to "authenticated";

grant update on table "public"."roles" to "authenticated";

grant delete on table "public"."roles" to "service_role";

grant insert on table "public"."roles" to "service_role";

grant references on table "public"."roles" to "service_role";

grant select on table "public"."roles" to "service_role";

grant trigger on table "public"."roles" to "service_role";

grant truncate on table "public"."roles" to "service_role";

grant update on table "public"."roles" to "service_role";

grant delete on table "public"."team_permissions" to "anon";

grant insert on table "public"."team_permissions" to "anon";

grant references on table "public"."team_permissions" to "anon";

grant select on table "public"."team_permissions" to "anon";

grant trigger on table "public"."team_permissions" to "anon";

grant truncate on table "public"."team_permissions" to "anon";

grant update on table "public"."team_permissions" to "anon";

grant delete on table "public"."team_permissions" to "authenticated";

grant insert on table "public"."team_permissions" to "authenticated";

grant references on table "public"."team_permissions" to "authenticated";

grant select on table "public"."team_permissions" to "authenticated";

grant trigger on table "public"."team_permissions" to "authenticated";

grant truncate on table "public"."team_permissions" to "authenticated";

grant update on table "public"."team_permissions" to "authenticated";

grant delete on table "public"."team_permissions" to "service_role";

grant insert on table "public"."team_permissions" to "service_role";

grant references on table "public"."team_permissions" to "service_role";

grant select on table "public"."team_permissions" to "service_role";

grant trigger on table "public"."team_permissions" to "service_role";

grant truncate on table "public"."team_permissions" to "service_role";

grant update on table "public"."team_permissions" to "service_role";

grant delete on table "public"."teams" to "anon";

grant insert on table "public"."teams" to "anon";

grant references on table "public"."teams" to "anon";

grant select on table "public"."teams" to "anon";

grant trigger on table "public"."teams" to "anon";

grant truncate on table "public"."teams" to "anon";

grant update on table "public"."teams" to "anon";

grant delete on table "public"."teams" to "authenticated";

grant insert on table "public"."teams" to "authenticated";

grant references on table "public"."teams" to "authenticated";

grant select on table "public"."teams" to "authenticated";

grant trigger on table "public"."teams" to "authenticated";

grant truncate on table "public"."teams" to "authenticated";

grant update on table "public"."teams" to "authenticated";

grant delete on table "public"."teams" to "service_role";

grant insert on table "public"."teams" to "service_role";

grant references on table "public"."teams" to "service_role";

grant select on table "public"."teams" to "service_role";

grant trigger on table "public"."teams" to "service_role";

grant truncate on table "public"."teams" to "service_role";

grant update on table "public"."teams" to "service_role";

grant delete on table "public"."tenants" to "anon";

grant insert on table "public"."tenants" to "anon";

grant references on table "public"."tenants" to "anon";

grant select on table "public"."tenants" to "anon";

grant trigger on table "public"."tenants" to "anon";

grant truncate on table "public"."tenants" to "anon";

grant update on table "public"."tenants" to "anon";

grant delete on table "public"."tenants" to "authenticated";

grant insert on table "public"."tenants" to "authenticated";

grant references on table "public"."tenants" to "authenticated";

grant select on table "public"."tenants" to "authenticated";

grant trigger on table "public"."tenants" to "authenticated";

grant truncate on table "public"."tenants" to "authenticated";

grant update on table "public"."tenants" to "authenticated";

grant delete on table "public"."tenants" to "service_role";

grant insert on table "public"."tenants" to "service_role";

grant references on table "public"."tenants" to "service_role";

grant select on table "public"."tenants" to "service_role";

grant trigger on table "public"."tenants" to "service_role";

grant truncate on table "public"."tenants" to "service_role";

grant update on table "public"."tenants" to "service_role";

grant delete on table "public"."user_activity" to "anon";

grant insert on table "public"."user_activity" to "anon";

grant references on table "public"."user_activity" to "anon";

grant select on table "public"."user_activity" to "anon";

grant trigger on table "public"."user_activity" to "anon";

grant truncate on table "public"."user_activity" to "anon";

grant update on table "public"."user_activity" to "anon";

grant delete on table "public"."user_activity" to "authenticated";

grant insert on table "public"."user_activity" to "authenticated";

grant references on table "public"."user_activity" to "authenticated";

grant select on table "public"."user_activity" to "authenticated";

grant trigger on table "public"."user_activity" to "authenticated";

grant truncate on table "public"."user_activity" to "authenticated";

grant update on table "public"."user_activity" to "authenticated";

grant delete on table "public"."user_activity" to "service_role";

grant insert on table "public"."user_activity" to "service_role";

grant references on table "public"."user_activity" to "service_role";

grant select on table "public"."user_activity" to "service_role";

grant trigger on table "public"."user_activity" to "service_role";

grant truncate on table "public"."user_activity" to "service_role";

grant update on table "public"."user_activity" to "service_role";

grant delete on table "public"."user_teams" to "anon";

grant insert on table "public"."user_teams" to "anon";

grant references on table "public"."user_teams" to "anon";

grant select on table "public"."user_teams" to "anon";

grant trigger on table "public"."user_teams" to "anon";

grant truncate on table "public"."user_teams" to "anon";

grant update on table "public"."user_teams" to "anon";

grant delete on table "public"."user_teams" to "authenticated";

grant insert on table "public"."user_teams" to "authenticated";

grant references on table "public"."user_teams" to "authenticated";

grant select on table "public"."user_teams" to "authenticated";

grant trigger on table "public"."user_teams" to "authenticated";

grant truncate on table "public"."user_teams" to "authenticated";

grant update on table "public"."user_teams" to "authenticated";

grant delete on table "public"."user_teams" to "service_role";

grant insert on table "public"."user_teams" to "service_role";

grant references on table "public"."user_teams" to "service_role";

grant select on table "public"."user_teams" to "service_role";

grant trigger on table "public"."user_teams" to "service_role";

grant truncate on table "public"."user_teams" to "service_role";

grant update on table "public"."user_teams" to "service_role";

grant delete on table "public"."users" to "anon";

grant insert on table "public"."users" to "anon";

grant references on table "public"."users" to "anon";

grant select on table "public"."users" to "anon";

grant trigger on table "public"."users" to "anon";

grant truncate on table "public"."users" to "anon";

grant update on table "public"."users" to "anon";

grant delete on table "public"."users" to "authenticated";

grant insert on table "public"."users" to "authenticated";

grant references on table "public"."users" to "authenticated";

grant select on table "public"."users" to "authenticated";

grant trigger on table "public"."users" to "authenticated";

grant truncate on table "public"."users" to "authenticated";

grant update on table "public"."users" to "authenticated";

grant delete on table "public"."users" to "service_role";

grant insert on table "public"."users" to "service_role";

grant references on table "public"."users" to "service_role";

grant select on table "public"."users" to "service_role";

grant trigger on table "public"."users" to "service_role";

grant truncate on table "public"."users" to "service_role";

grant update on table "public"."users" to "service_role";

create policy "Public profiles are viewable by everyone."
on "public"."users"
as permissive
for select
to public
using (true);


create policy "Users can insert their own profile."
on "public"."users"
as permissive
for insert
to public
with check ((( SELECT auth.uid() AS uid) = id));


create policy "Users can update own profile."
on "public"."users"
as permissive
for update
to public
using ((( SELECT auth.uid() AS uid) = id));



